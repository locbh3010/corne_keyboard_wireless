/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <200>;
    quick-tap-ms = <150>;
    require-prior-idle-ms = <10>;
    flavor = "tap-preferred";
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB           &kp Q                 &kp W               &kp E               &kp R                &kp T             &kp Y        &kp U        &kp I                      &kp O           &kp P                   &kp BSPC
&kp LEFT_CONTROL  &mt LEFT_GUI A        &mt LEFT_ALT S      &mt LEFT_SHIFT D    &mt LEFT_CONTROL F   &mt CAPSLOCK G    &kp H        &mt LCTRL J  &mt LEFT_SHIFT K           &mt LEFT_ALT L  &mt LEFT_GUI SEMICOLON  &kp SQT
&kp LSHFT         &mt LC(LEFT_SHIFT) Z  &mt LS(LEFT_ALT) X  &mt LC(LEFT_ALT) C  &mt LS(LA(LCTRL)) V  &kp B             &kp N        &kp M        &kp COMMA                  &kp DOT         &kp FSLH                &kp ESC
                                                            &kp LEFT_ALT        &mo 1                &kp SPACE         &lt 4 ENTER  &mo 2        &mt LEFT_CONTROL LEFT_GUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp ESC           &kp N1                &kp N2              &kp N3                &kp N4                    &kp N5       &kp N6    &kp N7         &kp N8       &kp N9     &kp N0  &kp BSPC
&kp LEFT_CONTROL  &sk LEFT_GUI          &sk LEFT_ALT        &sk LEFT_SHIFT        &sk LEFT_CONTROL          &trans       &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans  &trans
&kp LSHFT         &sk LS(LEFT_CONTROL)  &sk LA(LEFT_SHIFT)  &sk LA(LEFT_CONTROL)  &sk LS(LA(LEFT_CONTROL))  &trans       &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans  &kp LEFT_SHIFT
                                                            &kp LGUI              &trans                    &kp SPACE    &kp RET   &mo 3          &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp LEFT_ALT  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL     &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT     &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                &kp LGUI  &mo 3     &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        fn_key {
            bindings = <
&kp TAB      &kp F1  &kp F2   &kp F3   &kp F4   &trans    &trans  &trans  &trans  &trans  &trans  &trans
&key_repeat  &kp F5  &kp F6   &kp F7   &kp F8   &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans       &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                              &trans   &trans   &trans    &trans  &trans  &trans
            >;
        };

        shortcut {
            bindings = <
&bt BT_CLR_ALL  &kp LC(GRAVE)  &kp LC(LS(GRAVE))  &kp LS(LC(P))  &kp LC(LS(O))  &trans          &kp LA(N1)  &kp LA(N2)  &kp LA(N3)  &kp LA(N4)  &kp LA(N5)  &trans
&sys_reset      &bt BT_SEL 0   &bt BT_SEL 1       &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4    &kp LC(N1)  &kp LC(N2)  &kp LC(N3)  &kp LC(N4)  &kp LC(N5)  &trans
&bootloader     &trans         &trans             &trans         &trans         &trans          &trans      &trans      &trans      &trans      &trans      &trans
                                                  &trans         &trans         &trans          &trans      &trans      &trans
            >;
        };
    };
};
